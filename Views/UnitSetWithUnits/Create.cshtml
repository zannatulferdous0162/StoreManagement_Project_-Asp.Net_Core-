@model StoreManagement_Project.ViewModels.UnitSetWithUnitsViewModel


@{
    ViewData["Title"] = "Create Unit Set";
}

<h1>Create Unit Set with Units</h1>
<hr />
<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="NameOfUnitSet"></label>
        <input asp-for="NameOfUnitSet" class="form-control" />
        <span asp-validation-for="NameOfUnitSet" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <input asp-for="Description" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Remarks"></label>
        <input asp-for="Remarks" class="form-control" />
    </div>

    <h4>Units</h4>
    <table class="table" id="unitsTable">
        <thead>
            <tr>
                <th>Unit Name</th>
                <th>Factor to Base Unit</th>
                <th>Is Base Unit</th>
                <th>Description</th>
                <th>Remarks</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Units.Count; i++)
            {
                <tr>
                    <td><input asp-for="@Model.Units[i].NameOfUnit" class="form-control" /></td>
                    <td><input asp-for="@Model.Units[i].UnitFactor" class="form-control" /></td>
                    <td>@Html.CheckBoxFor(m => m.Units[i].IsBaseUnit, new { @class = "form-check-input is-base-unit-checkbox" })</td>
                    <td><input asp-for="@Model.Units[i].Description" class="form-control" /></td>
                    <td><input asp-for="@Model.Units[i].Remarks" class="form-control" /></td>
                    <td><button type="button" class="btn btn-danger btn-sm remove-row">X</button></td>
                </tr>
            }
        </tbody>

    </table>
    <button type="button" class="btn btn-secondary" id="addUnitBtn">Add Unit</button>
    <br /><br />
    <button type="submit" class="btn btn-primary">Save</button>
</form>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        let index = @Model.Units.Count;

        $('#addUnitBtn').click(function () {
            const row = `
                        <tr>
                            <td><input name="Units[${index}].NameOfUnit" class="form-control" /></td>
                            <td><input name="Units[${index}].UnitFactor" class="form-control" /></td>
                            <td><input name="Units[${index}].IsBaseUnit" type="checkbox" class="form-check-input is-base-unit-checkbox" /></td>
                            <td><input name="Units[${index}].Description" class="form-control" /></td>
                            <td><input name="Units[${index}].Remarks" class="form-control" /></td>
                            <td><button type="button" class="btn btn-danger btn-sm remove-row">X</button></td>
                        </tr>`;
            $('#unitsTable tbody').append(row);
            index++;
        });

        $(document).on('click', '.remove-row', function () {
            $(this).closest('tr').remove();
        });

        $(document).on("change", ".is-base-unit-checkbox", function () {
            if (this.checked) {
                $(".is-base-unit-checkbox").not(this).prop("checked", false);
            }
        });
    </script>
}


